#pragma once

namespace Beryll
{
    enum class TextureType
    {
        UNKNOWN, // default value
        DIFFUSE_TEXTURE, // normal texture with RGB(A) colors of surface
        SPECULAR_TEXTURE, // specific texture with areas on object surface which should reflect light
        SHADOW_MAP_TEXTURE, // texture generated by RENDERER for calculate shadows on scene
        NORMAL_MAP_TEXTURE,
        HEIGHT_MAP_TEXTURE
    };

    class Texture
    {
    public:
        virtual ~Texture() {}

        virtual void bind() = 0;
        virtual void unBind() = 0;

        TextureType getType()
        {
            return m_type;
        }

    protected:
        // keep textures in static map in subclasses for reuse them
        // key = texturePath
        // value = textureID
        // check in subclass existing texture

        TextureType m_type = TextureType::UNKNOWN;
    };
}